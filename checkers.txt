Thats gonna be a lot of work but not too bad if you break it up.  
Youll want to get on organization first and worry about implementing each part after.  
I'll help with some of the organization.

your program will do the following (note each step can be its own function):
1. read an input file, user supplied.
2. a) display the board
   b) allow user to input a move
   c) check move legality
   d) ask if they would like to make another move (ie step 2 should be in a while loop, while they want to keep making more moves)
3. write an output file, ask user for output file name/location.

you will want to store the board state.  I would recommend an array of arrays of ints with fixed size (board size, 8x8) so Int[8][8].  so each space of the board corresponds to 1 section of the array.  for instance the top left checker could correspond to yourArray[0][0] and the top right yourArray[0][7].  the value could be what occupies that spot.  0 would be empty, 1 white checker, 2 black checker. so a black checker in the lower left would be stored as yourArray[7][0] = 2.

So we can start at read an input file function.  For this it sounds like you get to choose a format.  to make this as easy as possible I'd make the format 8 lines of 8 ints of values 0,1, or 2.  for instance:

20202020
02020202
20202020
00000000
00000000
01010101
10101010
01010101

would be a starting board position.  Your read function should read this 8x8 int board and store the values in the array I described. your output function will be the reverse.  It will take your array and create the text file of 8x8 ints. Now the interesting part is allowing users to make moves.

So lets break out step 2's steps. (all of step 2 should be in a while loop).
a) display board: this should just print your array of arrays just like I did above.  print 8 lines of 0s, and 1s,  However I would add two things.  numbers to describe the row/columns for your user.  so really display the following from the above example:
	
  01234567
  
0 20202020
1 02020202
2 20202020
3 00000000
4 00000000
5 01010101
6 10101010
7 01010101

b) ask user to input move 
	1.  ask user for checker they wish to move.  the user will need to supply a row and column number so ask both questions:
		"what row?" (make sure value entered is between 0-7, otherwise ask again)
		"what column?" (again check it is 0-7 otherwise ask again).
	    check if a checker exists at the user supplied location in your stored array.  If no checker exists, inform user and repeat.
	2.  ask user where they would like to move it to.  This needs the same two questions.
		"what row?" (make sure value entered is between 0-7, otherwise ask again)
		"what column?" (again check it is 0-7 otherwise ask again).

c) Then check that the move is legal 
  if checker is white it can only move to two places, up/right and up/left  
  if checker is black it can only move to two places, down/right, down/left
  checker can only move to a spot occupying a checker if it is of the other color.
  
d) ask if they would like to make another move.  if no, break from loop.

	
